{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udf0c Compressive Framework (CF)","text":"<p>Open experimental research into compressive geometry, harmonic stability, and particle behavior. Simulations + equations + visualization modules.</p>"},{"location":"#status-builds","title":"\u2705 Status &amp; Builds","text":"System Status Continuous Integration Notebook Validation Pages Deployment License <p>\u2705 These badges now match your actual workflows and should not be 404.</p>"},{"location":"#what-is-cf","title":"\ud83d\udd0d What is CF?","text":"<p>Compressive Framework models particles as coherent energy geometries instead of destructive collisions.</p> <p>It enables study of:</p> <p>\u2714 Harmonic wobble suppression \u2714 Anchor clustering auto-tuning \u2714 Multi-arm fractal stability \u2714 Phase coherence under compression  </p>"},{"location":"#research-modules","title":"\ud83e\uddea Research Modules","text":"Module Purpose CF-D Fractal Arm Model Most stable configuration for maintaining phase coherence Wobble Suppression Limits torque oscillation in &gt;6D compression Anchor Clustering Real-time stability correction algorithm Harmonic Geometry Explorer Visual model of resonance transitions <p>These are simulated \u2014 not physical device claims \u2705 safe and compliant.</p>"},{"location":"#project-layout","title":"\ud83d\udcc2 Project Layout","text":""},{"location":"Architecture/","title":"Software Architecture","text":"<p>The Compressive Framework (CF) is built for scientific reproducibility.</p>"},{"location":"Architecture/#core-principles","title":"Core Principles","text":"<ul> <li>Modular computation</li> <li>Notebook-driven simulation</li> <li>Continuous validation (CI)</li> <li>Open documentation</li> </ul>"},{"location":"Architecture/#structure","title":"Structure","text":""},{"location":"api/","title":"API Reference","text":"<p>See src for details.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you for your interest! Please follow these steps to contribute:</p> <ol> <li>Fork the repository.</li> <li>Create a feature branch: <code>git checkout -b feature/your-feature</code></li> <li>Run tests locally: <code>pytest -q</code></li> <li>Open a PR with a clear description and link to related issues.</li> </ol> <p>Please include reproducible config files in <code>data/examples/</code> when adding experiments.</p>"},{"location":"equations_models/","title":"Equations &amp; Models","text":"<p>This area will grow to include your symbolic and numerical expressions describing energy compression, resonance ratios, and field stability under harmonic modulation.</p>"},{"location":"glossary/","title":"Glossary","text":"<ul> <li>Anchor cluster: group of nodes that act as local stabilization points.</li> <li>Harmonic folding: metaphor describing how multiple harmonics interact and form nested patterns.</li> <li>Wobble: oscillatory phase variance identified by local phase slips and increased \u03c3\u03c6.</li> </ul>"},{"location":"math_reference/","title":"Math Reference","text":"<p>\\</p>"},{"location":"math_reference/#math-reference-equation-api","title":"Math Reference \u2014 Equation API","text":"<p>This page describes the equation API and the example models included in the <code>cf.equations</code> package.</p>"},{"location":"math_reference/#equationmodel-base","title":"EquationModel (base)","text":"<p>All model classes inherit from <code>EquationModel</code> and implement:</p> <pre><code>def evaluate(self, *args, **kwargs):\n    ...\n</code></pre> <p>They should accept numpy arrays and return numpy arrays or scalars.</p>"},{"location":"math_reference/#included-equation-models","title":"Included equation models","text":"<ul> <li><code>resonance</code>: <code>evaluate(frequency, amplitude, phase_offset=0.0, t=None)</code></li> <li><code>compression</code>: <code>evaluate(base_frequency, compression, alpha=0.1)</code></li> <li><code>feedback</code>: <code>evaluate(phases, hf=0.1, neighbor_kernel=None)</code></li> </ul> <p>These are lightweight, testable building blocks intended as starting points for more complex physics modules.</p>"},{"location":"reference_plots/","title":"Reference Plots","text":"<p>Below is a CI-generated \"gold-standard\" snapshot plot produced during docs deployment.</p> <p></p> <p>This static figure is generated from <code>scripts/generate_reference_plot.py</code> and updated whenever docs are rebuilt.</p>"},{"location":"research/","title":"Research Overview","text":"<p>This section documents the theoretical foundation:</p> <ul> <li>Compressive harmonics</li> <li>Phase-coherence stability</li> <li>Particle-wave geometry analogs</li> </ul> <p>More detail will be added here as the models evolve.</p>"},{"location":"simulation_concepts/","title":"Simulation Concepts","text":"<p>This section details the computational structures used in simulation \u2014 including field harmonics, resonance thresholds, and wobble suppression mechanisms.</p>"},{"location":"simulations/","title":"Interactive Simulation \u2014 Harmonic Compression Visualizer","text":"<p>This interactive demo runs entirely in your browser. It demonstrates the simplified compressive-harmonic field used in CF:</p> <p>[ \\Psi(x,t) = A \\cdot \\sin(k x - \\omega t)\\cdot e^{-\\alpha x} ]</p> <p>Use the sliders to change parameters and observe both the 2D snapshot and a small 3D surface.</p> Amplitude (A)        1.00 Wave number (k)        1.2566 Angular freq (\u03c9)        2.0944 Damping (\u03b1)        0.10 Export PNG Summary Peak amplitude: \u2014 Change sliders to explore resonance and damping Snapshot x-range 0 \u2192 20"},{"location":"notebooks/intro_to_cf/","title":"Intro to CF \u2014 Notebook Guide","text":"<p>This page is linked to an executable version of:</p> <p>\ud83d\udcd3 <code>notebooks/intro_to_cf.ipynb</code></p>"},{"location":"notebooks/intro_to_cf/#what-you-can-explore","title":"What You Can Explore","text":"<ul> <li>Compression field and gradients</li> <li>Particle motion toward compression centers</li> <li>Basic numerical stability checks</li> </ul>"},{"location":"notebooks/intro_to_cf/#run-it-locally","title":"Run it locally","text":"<p>```bash pip install -r requirements.txt jupyter notebook notebooks/intro_to_cf.ipynb</p>"},{"location":"theory/equations/","title":"Equations (Early-Phase)","text":"<p>CF uses compression-field potentials instead of force-based formulations.</p> <p>We define: - ( C(x) ) \u2014 Compression field at position (x) - ( \\nabla C(x) ) \u2014 Compression gradient (drives motion) - ( m ) \u2014 Particle mass</p>"},{"location":"theory/equations/#motion-law-prototype","title":"Motion Law Prototype","text":"<p>[ \\mathbf{F}_{c} = -m \\, \\nabla C(x) ]</p>"},{"location":"theory/equations/#stability-condition","title":"Stability Condition","text":"<p>[ \\nabla C(x) = 0 \\Rightarrow \\text{compression equilibrium} ]</p> <p>More detailed tensors and curvature mappings are under development. Contributors may propose alternative formulations.</p>"},{"location":"theory/overview/","title":"Theory Overview","text":"<p>The Compressive Framework proposes that:</p> <p>Gravity is fundamentally a compressive result of spatial curvature acting upon matter or quantum fields.</p> <p>Instead of being purely attractive, CF models gravity as:</p> <ul> <li>A pressure differential created by curvature gradients</li> <li>Particles move toward maximal compression</li> <li>Structure emerges where compression is minimized</li> </ul>"},{"location":"theory/overview/#key-principles","title":"Key Principles","text":"Principle Description Spatial Compression Curved geometry creates directional pressure Particle Behavior Particles follow compression gradients Stability Stable orbits = compression equilibrium Collapse Runaway compression \u2192 black holes <p>The formal mathematics is still under development \u2014 contributors welcome!</p>"}]}